plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def globalProperties = new Properties()
def globalPropertiesFile = rootProject.file("global.properties")
if (globalPropertiesFile.exists()) {
    globalPropertiesFile.withReader("UTF-8") { reader ->
        globalProperties.load(reader)
    }
}

def flutterVersionCode = globalProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = globalProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}


android {
    namespace = "de.movetopia"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = globalProperties.getProperty('flutter.ndkVersion')

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    defaultConfig {
        applicationId = "de.movetopia"
        minSdk = globalProperties.getProperty('flutter.minSdkVersion').toInteger()
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    signingConfigs {
        // You can set up a release signing config here
        release {
            // Comment out these lines and replace with your own signing config
            // storeFile file("release.keystore")
            // storePassword "your-store-password"
            // keyAlias "release"
            // keyPassword "your-key-password"
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug // For now, using debug signing

            // Release-specific settings
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix '.debug'
            resValue "string", "app_name", "@string/app_name_debug"
            debuggable true
        }
    }

    // Create a resource file for Fastlane to use
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "movetopia-${variant.buildType.name}.apk"
        }
    }
}

flutter {
    source = "../.."
}
